import os
from langchain_community.vectorstores import FAISS
from langchain_huggingface import HuggingFaceEmbeddings
from langchain_community.llms import Ollama
from langchain.chains import ConversationalRetrievalChain
from langchain.prompts import PromptTemplate

# üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏
embedding_model = "sentence-transformers/all-MiniLM-L6-v2"
llm_model = "mistral"
index_path = "faiss_index"

# üß† –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è (system prompt)
system_prompt = (
    "–¢—ã ‚Äî –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —Å–∏—Å—Ç–µ–º–µ UNIVER. –û—Ç–≤–µ—á–∞–π —Å—Ç—Ä–æ–≥–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ. "
    "–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å —Ç—Ä–µ–±—É–µ—Ç –¥–µ–π—Å—Ç–≤–∏–π, –æ–ø–∏—à–∏ –ø–æ—à–∞–≥–æ–≤–æ. –£–ø–æ–º–∏–Ω–∞–π –º–æ–¥—É–ª—å, –µ—Å–ª–∏ —ç—Ç–æ –≤–∞–∂–Ω–æ. "
    "–ï—Å–ª–∏ –Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ ‚Äî —á–µ—Å—Ç–Ω–æ —Å–∫–∞–∂–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–∏, –≥–¥–µ —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ."
)

# üìÑ Prompt-—à–∞–±–ª–æ–Ω –¥–ª—è history condense
prompt_template = PromptTemplate.from_template(
    """–í–æ–ø—Ä–æ—Å: {question}

–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: {instruction}"""
)

# üìÜ –≠–º–±–µ–¥–¥–∏–Ω–≥–∏ –∏ FAISS
print("üîç –ó–∞–≥—Ä—É–∂–∞–µ–º MiniLM embedding...")
embedding = HuggingFaceEmbeddings(model_name=embedding_model)

print("üìÇ –ó–∞–≥—Ä—É–∂–∞–µ–º FAISS –∏–Ω–¥–µ–∫—Å...")
db = FAISS.load_local(index_path, embedding, allow_dangerous_deserialization=True)

# üß¨ LLM –∏ —Ü–µ–ø–æ—á–∫–∞
llm = Ollama(model=llm_model)

qa = ConversationalRetrievalChain.from_llm(
    llm=llm,
    retriever=db.as_retriever(search_kwargs={"k": 10}),
    return_source_documents=True,
    condense_question_prompt=prompt_template,
    chain_type="stuff"
)

# üîä –î–∏–∞–ª–æ–≥–æ–≤–∞—è –∏—Å—Ç–æ—Ä–∏—è
chat_history = []

print("‚úÖ –ì–æ—Ç–æ–≤–æ! –í–≤–µ–¥–∏—Ç–µ –≤–æ–ø—Ä–æ—Å (–∏–ª–∏ 'exit' –¥–ª—è –≤—ã—Ö–æ–¥–∞).\n")

while True:
    query = input("üîπ –í–æ–ø—Ä–æ—Å: ").strip()
    if query.lower() in ["exit", "–≤—ã—Ö–æ–¥"]:
        break

    try:
        result = qa.invoke({
            "question": query,
            "chat_history": chat_history[-15:],
            "instruction": system_prompt
        })

        answer = result.get("answer", "").strip()
        print("\nüí¨ –û—Ç–≤–µ—Ç:\n", answer)

        # üìÉ –ö–æ–Ω—Ç–µ–∫—Å—Ç
        sources = result.get("source_documents", [])
        if sources:
            print("\nüìÉ –ö–æ–Ω—Ç–µ–∫—Å—Ç (top 3):")
            for i, doc in enumerate(sources[:3], 1):
                content = doc.page_content.strip()
                print(f"\n--- –î–æ–∫—É–º–µ–Ω—Ç {i} ---\n{content[:700]}...")

        # üìÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ç–æ—Ä–∏—é
        chat_history.append((query, answer))

    except Exception as e:
        print("\nÔ∏èÔ∏èÔ∏èÔ∏èüöß –û—à–∏–±–∫–∞:", e)
